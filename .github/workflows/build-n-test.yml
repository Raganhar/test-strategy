name: build and test

on:
  push:

jobs:
  build-n-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-dotnet@v3
    - name: Install dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --configuration Release --no-restore
    - name: Test
      run: dotnet test --no-restore /p:CollectCoverage=true
      
#        /p:CoverletOutputFormat=cobertura
#      run: dotnet test --logger "trx;LogFileName=test-results.trx" --no-restore --verbosity normal /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura --output .\coverage-reports\
#    - name: Test Report
#      uses: dorny/test-reporter@v1
#      if: success() || failure()    # run this step even if previous step failed
#      with:
#        name: Tests report stuff         # Name of the check run which will be created
#        path: TestApi.Tests/TestResults/test-results.trx    # Path to test results
#        reporter: dotnet-trx  

#    - name: ReportGenerator
#      uses: danielpalme/ReportGenerator-GitHub-Action@5.1.12
#      with:
#        reports: 'TestApi.Tests/coverage.cobertura.xml' # REQUIRED # The coverage reports that should be parsed (separated by semicolon). Globbing is supported.
#        targetdir: 'coveragereport' # REQUIRED # The directory where the generated report should be saved.
#        reporttypes: 'HtmlInline;Cobertura' # The output formats and scope (separated by semicolon) Values: Badges, Clover, Cobertura, CsvSummary, Html, Html_Dark, Html_Light, HtmlChart, HtmlInline, HtmlInline_AzurePipelines, HtmlInline_AzurePipelines_Dark, HtmlInline_AzurePipelines_Light, HtmlSummary, JsonSummary, Latex, LatexSummary, lcov, MarkdownSummary, MHtml, PngChart, SonarQube, TeamCitySummary, TextSummary, Xml, XmlSummary
#        sourcedirs: '' # Optional directories which contain the corresponding source code (separated by semicolon). The source directories are used if coverage report contains classes without path information.
#        historydir: '' # Optional directory for storing persistent coverage information. Can be used in future reports to show coverage evolution.
#        plugins: '' # Optional plugin files for custom reports or custom history storage (separated by semicolon).
#        assemblyfilters: '+*' # Optional list of assemblies that should be included or excluded in the report. Exclusion filters take precedence over inclusion filters. Wildcards are allowed.
#        classfilters: '+*' # Optional list of classes that should be included or excluded in the report. Exclusion filters take precedence over inclusion filters. Wildcards are allowed.
#        filefilters: '+*' # Optional list of files that should be included or excluded in the report. Exclusion filters take precedence over inclusion filters. Wildcards are allowed.
#        verbosity: 'Info' # The verbosity level of the log messages. Values: Verbose, Info, Warning, Error, Off
#        title: '' # Optional title.
#        tag: '${{ github.run_number }}_${{ github.run_id }}' # Optional tag or build version.
#        license: '' # Optional license for PRO version. Get your license here: https://reportgenerator.io/pro
#        customSettings: '' # Optional custom settings (separated by semicolon). See: https://github.com/danielpalme/ReportGenerator/wiki/Settings.
#        toolpath: 'reportgeneratortool' # Default directory for installing the dotnet tool.
#  
#    - name: Upload coverage report artifact
#      uses: actions/upload-artifact@v2.2.3
#      with:
#        name: CoverageReport # Artifact name        
#        path: coveragereport # Directory containing files to upload
